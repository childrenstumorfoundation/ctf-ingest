---
version: '3'
services:
  # The environment variable "TAG" is used throughout this file to
  # specify the version of the images to run. The default is set in the
  # '.env' file in this folder. It can be overridden with any normal
  # technique for setting environment variables, for example:
  #
  #   TAG=6.0.0-beta1 docker-compose up
  #
  # REF: https://docs.docker.com/compose/compose-file/#variable-substitution
  #
  # Also be sure to set the ELASTIC_VERSION variable. For released versions,
  # ${TAG} and ${ELASTIC_VERSION} will be identical, but for pre-release
  # versions, ${TAG} might contain an extra build identifier, like
  # "6.0.0-beta1-3eab5b40", so a full invocation might look like:
  #
  #   ELASTIC_VERSION=6.0.0-beta1 TAG=6.0.0-beta1-3eab5b40 docker-compose up
  #
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch-platinum:${TAG}
  #   environment: ['http.host=0.0.0.0', 'transport.host=127.0.0.1', 'ELASTIC_PASSWORD=${ELASTIC_PASSWORD}']
  #   ports: ['9200:9200']
  #
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:${TAG}
  #   environment: ['ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}']
  #   ports: ['5601:5601']
  #   depends_on: ['elasticsearch']

  pg_data:
    image: postgres:10
    environment: ['POSTGRES_PASSWORD=${PGDATA_PASSWORD}']
    restart: always
    ports: ['5432:5432']
    volumes: ['./data/storage/pg:/var/lib/postgresql/data']

  jupyter:
    build: ./docker-configs/notebook/
    ports: ['8888:8888']
    volumes: ['./data/ingests:/home/jovyan/work']
    environment: ['GRANT_SUDO=${JUPYTER_GRANT_SUDO}']
    command: start-notebook.sh --NotebookApp.token=''


  ######## Superset #######
  redis:
    image: redis
    restart: always
    # volumes:
    #   - redis:/data
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_USER: superset
    # volumes:
    #   - postgres:/var/lib/postgresql/data
  superset:
    image: amancevice/superset
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
    ports:
      - "8088:8088"
    volumes:
      - ./docker-configs/superset:/etc/superset
  worker:
    image: amancevice/superset
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
    volumes:
      - ./docker-configs/superset:/etc/superset
    command: worker
# volumes:
#   postgres:
#     external: false
#   redis:
#     external: false
